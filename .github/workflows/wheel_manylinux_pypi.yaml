# GH actions.
name: Wheel-Manylinux-Pypi

on:
  push:
    branches:
      - main
      - release/*
      - release_cuda
  workflow_dispatch:
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 5 * * 3' # Every Wed 5 AM UTC

jobs:
  Build:
    strategy:
      fail-fast: false
      matrix:
        # matrix of build configs
        config:
          - cuda: 'none'
            image: 'tlcpack/package-cpu:1d98bf9'
            package_name: 'apache-tvm'
          - cuda: '10.2'
            image: 'tlcpack/package-cu102:1d98bf9'
            package_name: 'apache-tvm'
          - cuda: '11.3'
            image: 'tlcpack/package-cu113:1d98bf9'
            package_name: 'apache-tvm'
          - cuda: '11.6'
            image: 'tlcpack/package-cu116:1d98bf9'
            package_name: 'apache-tvm'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v4
      with:
        python-version: '3.7'
    - uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    - uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: TVM checkout
      run: |
        set -eux
        git clone https://github.com/apache/tvm tvm --recursive
    - name: Sync Package
      env:
        TAG: pypi
      run: |
        set -eux
        python3 common/sync_package.py \
          --cuda ${{ matrix.config.cuda }} \
          --package-name ${{ matrix.config.package_name }} \
          --use-public-version \
          "$TAG"
        cd tvm
        cat ../setup.py.patch | patch -p1 -d .
    - name: Build
      env:
        IMAGE: ${{ matrix.config.image }}
        CUDA: ${{ matrix.config.cuda }}
      run: |
        set -eux
        docker/bash.sh --no-gpu $IMAGE ./wheel/build_wheel_manylinux.sh --cuda $CUDA
    - name: Test
      if: matrix.config.cuda == 'none'
      env:
        IMAGE: ${{ matrix.config.image }}
        WHEEL_TEST: "True"
      # continue-on-error: true
      run: |
        set -eux
        docker/bash.sh --no-gpu $IMAGE ./wheel/run_tests.sh
    - uses: actions/upload-artifact@v3
      with:
        name: wheel-${{ matrix.config.package_name }}-${{ matrix.config.cuda }}
        path: tvm/python/repaired_wheels
    - name: Wheel-Deploy
      # if: github.ref == 'refs/heads/main'
      env:
        GITHUB_TOKEN: ${{ secrets.TLCPACK_GITHUB_TOKEN }}
      run: |
        python -m pip install github3.py
        python wheel/wheel_upload.py --tag v0.7.dev1 tvm/python/repaired_wheels
    # - name: Wheel-Deploy-Pypi
    #   # if: github.ref == 'refs/heads/main'
    #   env:
    #     TWINE_NON_INTERACTIVE: 1
    #     TWINE_REPOSITORY: pypi
    #     TWINE_USERNAME: __token__
    #     TWINE_PASSWORD: ${{ secrets.PYPI_API_KEY }}
    #   run: |
    #     set -eux
    #     python3 -m pip install twine
    #     twine upload tvm/python/repaired_wheels/*
