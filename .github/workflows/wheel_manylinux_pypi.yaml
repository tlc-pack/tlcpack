# GH actions.
name: Wheel-Manylinux-Pypi

on:
  push:
    branches:
      - main
  workflow_dispatch:
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 5 * * 3' # Every Wed 5 AM UTC

jobs:
  Build:
    strategy:
      matrix:
        pkg: ['pypi-nightly']
        # matrix of build configs
        config:
          - cuda: 'none'
            image: 'tlcpack/package-cpu:v0.5'
            package_name: 'apache-tvm'

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: TVM checkout
      run: |
        git clone https://github.com/apache/tvm tvm --recursive
    - name: Sync Package
      run: |
        python3 common/sync_package.py \
          --cuda ${{ matrix.config.cuda }} \
          --package-name ${{ matrix.config.package_name }} \
          --use-public-version \
          ${{ matrix.pkg }}
    - name: Build
      env:
        IMAGE: ${{ matrix.config.image }}
        CUDA: ${{ matrix.config.cuda }}
      run: |
        docker/bash.sh --no-gpu $IMAGE ./wheel/build_wheel_manylinux.sh --cuda $CUDA
    - name: Test
      if: matrix.config.cuda == 'none'
      env:
        IMAGE: ${{ matrix.config.image }}
        WHEEL_TEST: "True"
      continue-on-error: true
      run: |
        docker/bash.sh --no-gpu $IMAGE ./wheel/run_tests.sh
    - name: Wheel-Deploy-Pypi
      if: github.ref == 'refs/heads/main'
      env:
        TWINE_NON_INTERACTIVE: 1
        TWINE_REPOSITORY: pypi
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_KEY }}
      run: |
        python3 -m pip install twine
        twine upload tvm/python/repaired_wheels/*
