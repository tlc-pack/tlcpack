# GH actions.
name: Wheel-WinMac-Nightly

on:
  push:
    branches:
      - main
      - release/*
      - release-build-macos
  pull_request:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * *' # 6 AM UTC

jobs:
  Build:
    strategy:
      matrix:
        os:
          - macOS-latest
#        pkg: ['tlcpack', 'tlcpack-nightly']
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      env:
        CACHE_NUMBER: 0
      with:
        path: ~/conda_pkgs_dir
        key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('conda/build-environment.yaml') }}
    # Use conda for LLVM dep
    - uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: tlcpack-build
        channel-priority: strict
        environment-file: conda/build-environment.yaml
        auto-activate-base: false
        use-only-tar-bz2: true
    - name: Conda info
      run: |
        conda info
        conda list
    - name: TVM checkout
      run: |
        git clone https://github.com/apache/tvm tvm --recursive
    - name: Sync Package
      env:
        TAG: pypi
      run: |
        set -eux
        python3 common/sync_package.py \
          --package-name apache-tvm \
          --use-public-version \
          "$TAG"
    - name: Build@MacOS
      if: startsWith(matrix.os, 'macOS')
      shell: bash -l {0}
      run: >-
        wheel/build_lib_osx.sh

    - name: Build@Win
      if: startsWith(matrix.os, 'windows')
      shell: cmd /C call {0}
      run: >-
        wheel/build_lib_win.bat

    # Build wheel for three python versions
    - uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Wheel-Build@Py37
      env:
        MACOSX_DEPLOYMENT_TARGET: 10.15
      run: |
        python -m pip install setuptools Cython wheel
        cd tvm/python
        python setup.py bdist_wheel

    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Wheel-Build@Py38
      env:
        MACOSX_DEPLOYMENT_TARGET: 10.15
      run: |
        python -m pip install setuptools Cython wheel
        cd tvm/python
        python setup.py bdist_wheel

    - uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Wheel-Build@Py39
      env:
        MACOSX_DEPLOYMENT_TARGET: 10.15
      run: |
        python -m pip install setuptools Cython wheel
        cd tvm/python
        python setup.py bdist_wheel

    - uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Wheel-Build@Py310
      env:
        MACOSX_DEPLOYMENT_TARGET: 10.15
      run: |
        python -m pip install setuptools Cython wheel
        cd tvm/python
        python setup.py bdist_wheel
    # Use system python instead of conda for upload
    - name: Wheel-Deploy-Pypi
      # if: github.ref == 'refs/heads/main'
      env:
        TWINE_NON_INTERACTIVE: 1
        # TWINE_REPOSITORY: pypi
        # TWINE_USERNAME: __token__
        # TWINE_PASSWORD: ${{ secrets.PYPI_API_KEY }}
      run: |
        set -eux
        python3 -m pip install twine
        find .
        # twine upload tvm/python/repaired_wheels/*
#     - name: Wheel-Deploy
# #      if: github.ref == 'refs/heads/main'
#       env:
#         GITHUB_TOKEN: ${{ secrets.TLCPACK_GITHUB_TOKEN }}
#       run: |
#         set -eux
#         python3 -m pip install github3.py
#         python3 wheel/wheel_upload.py --tag v0.7.dev1 tvm/python/dist
