# GH actions.
name: Wheel-Manylinux-Nightly

on:
  push:
    branches:
      - main
      - upload
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 6 * * *' # 6 AM UTC

jobs:
  Build:
    strategy:
      matrix:
        pkg: ['tlcpack-nightly']
        # matrix of build configs
        config:
          - cuda: 'none'
            image: 'tlcpack/package-cpu:7bfdf7e'
          - cuda: '10.2'
            image: 'tlcpack/package-cu102:7bfdf7e'
          # CUDA 11.0 is not supported for Conda build,
          # Let's drop support here as well.
          # - cuda: '11.0'
          #   image: 'tlcpack/package-cu110:7bfdf7e'
          - cuda: '11.1'
            image: 'tlcpack/package-cu111:7bfdf7e'
          - cuda: '11.3'
            image: 'tlcpack/package-cu113:7bfdf7e'
          - cuda: '11.6'
            image: 'tlcpack/package-cu116:7bfdf7e'

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: TVM checkout
      run: |
        git clone https://github.com/apache/tvm tvm --recursive
    - name: Sync Package
      run: python common/sync_package.py --cuda ${{ matrix.config.cuda }} ${{ matrix.pkg }}
    - name: Build
      env:
        IMAGE: ${{ matrix.config.image }}
        CUDA: ${{ matrix.config.cuda }}
      run: |
        docker/bash.sh --no-gpu $IMAGE ./wheel/build_wheel_manylinux.sh --cuda $CUDA
    - name: Test
      if: matrix.config.cuda == 'none'
      env:
        IMAGE: ${{ matrix.config.image }}
        WHEEL_TEST: "True"
      continue-on-error: true
      run: |
        docker/bash.sh --no-gpu $IMAGE ./wheel/run_tests.sh
    - name: Wheel-Deploy
      if: github.ref == 'refs/heads/upload'
      env:
        GITHUB_TOKEN: ${{ secrets.TLCPACK_GITHUB_TOKEN }}
      run: |
        python -m pip install pyOpenSSL --upgrade
        python -m pip install github3.py
        python wheel/wheel_upload.py --tag v0.7.dev1 tvm/python/repaired_wheels
